# Generated by Django 4.1.7 on 2023-07-21 09:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(default='f', max_length=20)),
                ('last_name', models.CharField(default='l', max_length=20)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('token', models.CharField(default='032a49d9-61f0-436a-8481-31d1ab66711b', max_length=50)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_otp', models.CharField(blank=True, max_length=6, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('words', models.JSONField(blank=True, max_length=500, null=True)),
                ('pos', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParaphraseData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_tax', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('result_tax', models.JSONField(blank=True, default=None, null=True)),
                ('select_tax', models.CharField(blank=True, default=None, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpinParaphrase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_text', models.TextField(blank=True, null=True)),
                ('output_text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Synonyms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=250)),
                ('synonyms_list', models.JSONField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('result', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
